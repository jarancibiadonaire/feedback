<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<http pattern="/index" auto-config="true">
		<form-login login-page="/index" default-target-url="/welcome"
			authentication-failure-url="/index?error" username-parameter="username"
			password-parameter="password" />
		<logout logout-success-url="/index?logout" />
		<!-- enable csrf protection -->
		<csrf />
	</http>
	<!-- enable use-expressions -->
	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/admin**" access="hasRole('ROLE_ADMIN')" />
		<!-- access denied page -->
		<access-denied-handler error-page="/403" />

		<form-login login-page="/login" default-target-url="/welcome"
			authentication-failure-url="/login?error" username-parameter="username"
			password-parameter="password" />
		<logout logout-success-url="/login?logout" delete-cookies="JSESSIONID" />
		<!-- enable csrf protection -->
		<csrf />
	</http>

	<!-- Select users and user_roles from database -->
	<authentication-manager alias="authenticationManager">
		<authentication-provider>
			<password-encoder ref="encoder" />
			<jdbc-user-service data-source-ref="datasource"
				users-by-username-query="select username,pass as password, enabled from user_table where username=?"
				authorities-by-username-query="select username,role_text as role from user_table ut,user_roles ur,roles r where ut.username =? and ut.user_id=ur.user_id and ur.role_id=r.role_id" />
		</authentication-provider>
	</authentication-manager>
	<beans:bean id="encoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
		<beans:constructor-arg name="strength" value="10" />
	</beans:bean>

</beans:beans>